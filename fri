#!/bin/bash

THIS_SCRIPT="$0"

function node_info {
    ros2 node info $1 | fzf --bind "ctrl-a:execute($THIS_SCRIPT node_list),ctrl-y:execute-silent(echo {+1} | sed 's/://' | xclip -selection clipboard),ctrl-e:preview(echo {+1} | sed 's/://' | xargs ros2 topic echo --once),ctrl-h:preview(echo {+1} | sed 's/://' | xargs ros2 topic hz),ctrl-i:preview(echo {+1} | sed 's/://' | xargs ros2 topic info -v),ctrl-b:preview(echo {+1} | sed 's/://' | xargs ros2 topic bw),ctrl-t:preview(echo {+1} | sed 's/://' | xargs ros2 topic type | xargs ros2 interface show)" --preview "echo {+1} | sed 's/://' | xargs ros2 topic info -v " | awk -F: '{print $1}' | xargs $THIS_SCRIPT topic_info
}

function node_list {
    ros2 node list | fzf --bind "ctrl-a:execute($THIS_SCRIPT topic_list),ctrl-r:reload(ros2 node list),ctrl-y:execute-silent(echo {} | xclip -selection clipboard)" --header 'ros2 node list:' --preview 'ros2 node info {}' | xargs $THIS_SCRIPT node_info
}

function topic_info {
    ramtmp="$(mktemp -p /dev/shm/)"

    ros2 topic info -v $1 >> $ramtmp

    perl -pe 'BEGIN{undef $/;} s/\n\n/\x0/g; s/\n$//g' $ramtmp | fzf --bind "ctrl-a:execute($THIS_SCRIPT topic_list),ctrl-e:preview(ros2 topic echo --once $1),ctrl-h:preview(ros2 topic hz $1),ctrl-i:preview(echo {}),ctrl-b:preview(ros2 topic bw $1),ctrl-t:preview(ros2 interface show $1)" --header "ros2 topic info $1:" --read0 --preview 'echo {}' | head -n 2 | awk '{print $NF}' | tac | tr '\n' '/' | tr -s '/' | sed 's/.$//' | xargs $THIS_SCRIPT node_info
    rm $ramtmp
}

function topic_list {
    ros2 topic list | fzf --bind "ctrl-a:execute($THIS_SCRIPT node_list),ctrl-r:reload(ros2 topic list),ctrl-y:execute-silent(echo {} | xclip -selection clipboard),ctrl-e:preview(ros2 topic echo --once {}),ctrl-h:preview(ros2 topic hz {}),ctrl-i:preview(ros2 topic info -v {}),ctrl-b:preview(ros2 topic bw {}),ctrl-t:preview(ros2 topic type {} | xargs ros2 interface show)" --header 'ros2 topic list:' --preview 'ros2 topic info -v {}' | xargs $THIS_SCRIPT topic_info
}

function usage {
    echo "unknown usage: $@"
}


if [ $# -lt 1 ]
then
    node_list
elif [ $# -lt 2 ]
then
    case "$1" in
    node_list) node_list ;;
    topic_list) topic_list ;;
    *) usage $@ ;;
    esac
else
    case "$1" in
    node_info) node_info $2 ;;
    topic_info) topic_info $2 ;;
    *) usage $@ ;;
    esac
fi


